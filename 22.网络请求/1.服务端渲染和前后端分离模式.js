/*
  早期的网页都是通过后端渲染来完成的：服务端渲染（SSR）
  客户端发送请求 -> 服务端接收请求并返回相应的HTML文档 -> 页面刷新，用户加载新的HTML文档
    缺点很多：
      比如只是某些数据发生了变化，而服务器却要将重绘的整个页面再返回个浏览器加载，这显然有悖于程序员的DRY原则（Don't repeat yourself）
      只是一些数据发生了变化，但是却返回了整个HTML文档，显然也是会给网络带来很多不必要的开销

  现在流行，客户端渲染（前后端分离），后端提供一个API接口，可以监听前端的请求，前端请求，后端再去数据库中拿对应的数据返回给前端
    前后端分离是一种思想，是一种架构

  有没有办法在页面数据变动的时候，只向服务器请求新的数据，并且在组织页面刷新的情况下，动态替换页面展示的数据呢？
    答案是AJAX技术
      Asynchronous JavaScript And XML（不过现在并不止是XML，是一种实现无页面刷新获取服务器数据的技术）
        AJAX最吸引人的就是它的异步特性，也就是说它可以在不重新刷新页面的情况下与服务器进行通信，交换数据，或更新页面
          你可以使用AJAX最主要的特性做下面两件事
            1.在不重新加载页面的情况下，发送请求给服务器
            2.接受并使用服务器发来的数据
*/